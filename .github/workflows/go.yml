name: Go Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags (e.g., v1.0.0)

permissions:
  contents: read
  packages: write
  deployments: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.23'

      - name: Build
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            GOOS=windows
            GOARCH=amd64
            OUTPUT="multicast-tool.exe"
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            GOOS=darwin
            GOARCH=amd64
            OUTPUT="multicast-tool"
          else
            GOOS=linux
            GOARCH=amd64
            OUTPUT="multicast-tool"
          fi
          env GOOS=$GOOS GOARCH=$GOARCH go build -o $OUTPUT main.go

      - name: Archive binaries
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            zip multicast-tool.zip multicast-tool.exe
          else
            tar -czvf multicast-tool-${{ matrix.os }}.tar.gz multicast-tool
          fi

      - name: Upload Release Asset
        uses: ncipollo/release-action@v1.10.0  # Use the latest version
        with:
          tag: ${{ github.ref }}  # Use the tag that triggered the workflow
          artifacts: |
            multicast-tool-linux.tar.gz
            multicast-tool-macos.tar.gz
            multicast-tool.zip